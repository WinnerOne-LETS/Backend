spring:
  datasource:
    url: jdbc:h2:mem:test;MODE=MYSQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
  config:
    import: optional:file:.env[.properties]
  spring:
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: ${GOOGLE_ID}
              clientSecret: ${GOOGLE_KEY}
              scope:
                - email
                - profile
            kakao:
              clientId: ${KAKAO_ID}
              clientSecret: ${KAKAO_KEY} # 카카오는 클라이언트 시크릿을 사용하지 않을 수도 있음.
              authorizationGrantType: authorization_code
              redirectUri: "{baseUrl}/login/oauth2/code/kakao"
              scope:
                - profile_nickname
                - profile_image
                - account_email
              provider:
                kakao:
                  authorizationUri: https://kauth.kakao.com/oauth/authorize
                  tokenUri: https://kauth.kakao.com/oauth/token
                  userInfoUri: https://kapi.kakao.com/v2/user/me
                  userNameAttribute: id

  h2:
    console:
      enabled: true

  jpa:
    database-platform: H2
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    defer-datasource-initialization: true

jwt:
  secret: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
  token-validity-in-seconds: 86400
